export declare type PackageManager = 'yarn' | 'pnpm' | 'npm';
export declare function detectPackageManager(dir?: string): PackageManager;
/**
 * Returns commands for the package manager used in the workspace.
 * By default, the package manager is derived based on the lock file,
 * but it can also be passed in explicitly.
 *
 * Example:
 *
 * ```javascript
 * execSync(`${getPackageManagerCommand().addDev} my-dev-package`);
 * ```
 *
 */
export declare function getPackageManagerCommand(packageManager?: PackageManager): {
    install: string;
    add: string;
    addDev: string;
    rm: string;
    exec: string;
    list: string;
    run: (script: string, args: string) => string;
};
export declare function getPackageManagerVersion(packageManager: PackageManager): string;
/**
 * Detects which package manager was used to invoke create-nx-{plugin|workspace} command
 * based on the main Module process that invokes the command
 * - npx returns 'npm'
 * - pnpx returns 'pnpm'
 * - yarn create returns 'yarn'
 *
 * Default to 'npm'
 */
export declare function detectInvokedPackageManager(): PackageManager;
